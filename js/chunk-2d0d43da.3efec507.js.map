{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm-es5/ion-virtual-scroll.entry.js"],"names":["CELL_TYPE_ITEM","CELL_TYPE_HEADER","CELL_TYPE_FOOTER","NODE_CHANGE_NONE","NODE_CHANGE_POSITION","NODE_CHANGE_CELL","MIN_READS","updateVDom","dom","heightIndex","cells","range","_i","dom_1","length","node","change","d","toMutate","end","offset","_loop_1","i","cell","find","n","top","push","pool","filter","_loop_2","type","index","visible","_a","toMutate_1","forEach","doRender","el","nodeRender","updateCellHeight","child","children","Array","from","tagName","childrenNu","newChild","createNode","classList","add","appendChild","style","transform","remove","reads","template","getTemplate","ownerDocument","importNode","content","querySelector","getViewport","scrollTop","vierportHeight","margin","Math","max","bottom","getRange","viewport","buffer","topPos","bottomPos","min","getShouldUpdate","dirtyIndex","currentRange","findCellIndex","findIndex","c","inplaceUpdate","dst","src","calcCells","items","itemHeight","headerHeight","footerHeight","headerFn","footerFn","approxHeaderHeight","approxFooterHeight","approxItemHeight","j","len","item","value","height","calcHeightIndex","buf","acum","resizeBuffer","Uint32Array","newBuf","set","subarray","positionForIndex","VirtualScroll","class_1","hostRef","_this","this","viewportHeight","virtualDom","isEnabled","viewportOffset","currentScrollTop","indexDirty","lastItemLen","totalHeight","onScroll","updateVirtualScroll","prototype","itemsChanged","connectedCallback","contentEl","_b","label","closest","getScrollElement","console","error","scrollEl","sent","updateState","componentDidUpdate","disconnectedCallback","undefined","onResize","positionForItem","Promise","resolve","getHeightIndex","checkRange","cellIndex","scheduleUpdate","checkEnd","timerUpdate","clearTimeout","readVS","bind","writeVS","topOffset","offsetTop","parentElement","offsetHeight","shouldUpdate","domRender","renderItem","forceUpdate","update","window","getComputedStyle","parseFloat","getPropertyValue","setCellHeight","componentOnReady","then","setTimeout","shouldEnable","enableScrollEvents","Infinity","shouldListen","rmEvent","addEventListener","removeEventListener","renderVirtualNode","renderHeader","renderFooter","render","VirtualProxy","map","Object","defineProperty","get","enumerable","configurable","utils","vattrs","classes","class","assign"],"mappings":"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","file":"js/chunk-2d0d43da.3efec507.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, f as readTask, w as writeTask, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nvar CELL_TYPE_ITEM = 'item';\nvar CELL_TYPE_HEADER = 'header';\nvar CELL_TYPE_FOOTER = 'footer';\nvar NODE_CHANGE_NONE = 0;\nvar NODE_CHANGE_POSITION = 1;\nvar NODE_CHANGE_CELL = 2;\nvar MIN_READS = 2;\nvar updateVDom = function (dom, heightIndex, cells, range) {\n    // reset dom\n    for (var _i = 0, dom_1 = dom; _i < dom_1.length; _i++) {\n        var node = dom_1[_i];\n        node.change = NODE_CHANGE_NONE;\n        node.d = true;\n    }\n    // try to match into exisiting dom\n    var toMutate = [];\n    var end = range.offset + range.length;\n    var _loop_1 = function (i) {\n        var cell = cells[i];\n        var node = dom.find(function (n) { return n.d && n.cell === cell; });\n        if (node) {\n            var top = heightIndex[i];\n            if (top !== node.top) {\n                node.top = top;\n                node.change = NODE_CHANGE_POSITION;\n            }\n            node.d = false;\n        }\n        else {\n            toMutate.push(cell);\n        }\n    };\n    for (var i = range.offset; i < end; i++) {\n        _loop_1(i);\n    }\n    // needs to append\n    var pool = dom.filter(function (n) { return n.d; });\n    var _loop_2 = function (cell) {\n        var node = pool.find(function (n) { return n.d && n.cell.type === cell.type; });\n        var index = cell.i;\n        if (node) {\n            node.d = false;\n            node.change = NODE_CHANGE_CELL;\n            node.cell = cell;\n            node.top = heightIndex[index];\n        }\n        else {\n            dom.push({\n                d: false,\n                cell: cell,\n                visible: true,\n                change: NODE_CHANGE_CELL,\n                top: heightIndex[index],\n            });\n        }\n    };\n    for (var _a = 0, toMutate_1 = toMutate; _a < toMutate_1.length; _a++) {\n        var cell = toMutate_1[_a];\n        _loop_2(cell);\n    }\n    dom\n        .filter(function (n) { return n.d && n.top !== -9999; })\n        .forEach(function (n) {\n        n.change = NODE_CHANGE_POSITION;\n        n.top = -9999;\n    });\n};\nvar doRender = function (el, nodeRender, dom, updateCellHeight) {\n    var children = Array.from(el.children).filter(function (n) { return n.tagName !== 'TEMPLATE'; });\n    var childrenNu = children.length;\n    var child;\n    for (var i = 0; i < dom.length; i++) {\n        var node = dom[i];\n        var cell = node.cell;\n        // the cell change, the content must be updated\n        if (node.change === NODE_CHANGE_CELL) {\n            if (i < childrenNu) {\n                child = children[i];\n                nodeRender(child, cell, i);\n            }\n            else {\n                var newChild = createNode(el, cell.type);\n                child = nodeRender(newChild, cell, i) || newChild;\n                child.classList.add('virtual-item');\n                el.appendChild(child);\n            }\n            child['$ionCell'] = cell;\n        }\n        else {\n            child = children[i];\n        }\n        // only update position when it changes\n        if (node.change !== NODE_CHANGE_NONE) {\n            child.style.transform = \"translate3d(0,\" + node.top + \"px,0)\";\n        }\n        // update visibility\n        var visible = cell.visible;\n        if (node.visible !== visible) {\n            if (visible) {\n                child.classList.remove('virtual-loading');\n            }\n            else {\n                child.classList.add('virtual-loading');\n            }\n            node.visible = visible;\n        }\n        // dynamic height\n        if (cell.reads > 0) {\n            updateCellHeight(cell, child);\n            cell.reads--;\n        }\n    }\n};\nvar createNode = function (el, type) {\n    var template = getTemplate(el, type);\n    if (template && el.ownerDocument) {\n        return el.ownerDocument.importNode(template.content, true).children[0];\n    }\n    return null;\n};\nvar getTemplate = function (el, type) {\n    switch (type) {\n        case CELL_TYPE_ITEM: return el.querySelector('template:not([name])');\n        case CELL_TYPE_HEADER: return el.querySelector('template[name=header]');\n        case CELL_TYPE_FOOTER: return el.querySelector('template[name=footer]');\n    }\n};\nvar getViewport = function (scrollTop, vierportHeight, margin) {\n    return {\n        top: Math.max(scrollTop - margin, 0),\n        bottom: scrollTop + vierportHeight + margin\n    };\n};\nvar getRange = function (heightIndex, viewport, buffer) {\n    var topPos = viewport.top;\n    var bottomPos = viewport.bottom;\n    // find top index\n    var i = 0;\n    for (; i < heightIndex.length; i++) {\n        if (heightIndex[i] > topPos) {\n            break;\n        }\n    }\n    var offset = Math.max(i - buffer - 1, 0);\n    // find bottom index\n    for (; i < heightIndex.length; i++) {\n        if (heightIndex[i] >= bottomPos) {\n            break;\n        }\n    }\n    var end = Math.min(i + buffer, heightIndex.length);\n    var length = end - offset;\n    return { offset: offset, length: length };\n};\nvar getShouldUpdate = function (dirtyIndex, currentRange, range) {\n    var end = range.offset + range.length;\n    return (dirtyIndex <= end ||\n        currentRange.offset !== range.offset ||\n        currentRange.length !== range.length);\n};\nvar findCellIndex = function (cells, index) {\n    var max = cells.length > 0 ? cells[cells.length - 1].index : 0;\n    if (index === 0) {\n        return 0;\n    }\n    else if (index === max + 1) {\n        return cells.length;\n    }\n    else {\n        return cells.findIndex(function (c) { return c.index === index; });\n    }\n};\nvar inplaceUpdate = function (dst, src, offset) {\n    if (offset === 0 && src.length >= dst.length) {\n        return src;\n    }\n    for (var i = 0; i < src.length; i++) {\n        dst[i + offset] = src[i];\n    }\n    return dst;\n};\nvar calcCells = function (items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) {\n    var cells = [];\n    var end = len + offset;\n    for (var i = offset; i < end; i++) {\n        var item = items[i];\n        if (headerFn) {\n            var value = headerFn(item, i, items);\n            if (value != null) {\n                cells.push({\n                    i: j++,\n                    type: CELL_TYPE_HEADER,\n                    value: value,\n                    index: i,\n                    height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\n                    reads: headerHeight ? 0 : MIN_READS,\n                    visible: !!headerHeight,\n                });\n            }\n        }\n        cells.push({\n            i: j++,\n            type: CELL_TYPE_ITEM,\n            value: item,\n            index: i,\n            height: itemHeight ? itemHeight(item, i) : approxItemHeight,\n            reads: itemHeight ? 0 : MIN_READS,\n            visible: !!itemHeight,\n        });\n        if (footerFn) {\n            var value = footerFn(item, i, items);\n            if (value != null) {\n                cells.push({\n                    i: j++,\n                    type: CELL_TYPE_FOOTER,\n                    value: value,\n                    index: i,\n                    height: footerHeight ? footerHeight(value, i) : approxFooterHeight,\n                    reads: footerHeight ? 0 : MIN_READS,\n                    visible: !!footerHeight,\n                });\n            }\n        }\n    }\n    return cells;\n};\nvar calcHeightIndex = function (buf, cells, index) {\n    var acum = buf[index];\n    for (var i = index; i < buf.length; i++) {\n        buf[i] = acum;\n        acum += cells[i].height;\n    }\n    return acum;\n};\nvar resizeBuffer = function (buf, len) {\n    if (!buf) {\n        return new Uint32Array(len);\n    }\n    if (buf.length === len) {\n        return buf;\n    }\n    else if (len > buf.length) {\n        var newBuf = new Uint32Array(len);\n        newBuf.set(buf);\n        return newBuf;\n    }\n    else {\n        return buf.subarray(0, len);\n    }\n};\nvar positionForIndex = function (index, cells, heightIndex) {\n    var cell = cells.find(function (c) { return c.type === CELL_TYPE_ITEM && c.index === index; });\n    if (cell) {\n        return heightIndex[cell.i];\n    }\n    return -1;\n};\nvar VirtualScroll = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.range = { offset: 0, length: 0 };\n        this.viewportHeight = 0;\n        this.cells = [];\n        this.virtualDom = [];\n        this.isEnabled = false;\n        this.viewportOffset = 0;\n        this.currentScrollTop = 0;\n        this.indexDirty = 0;\n        this.lastItemLen = 0;\n        this.totalHeight = 0;\n        /**\n         * It is important to provide this\n         * if virtual item height will be significantly larger than the default\n         * The approximate height of each virtual item template's cell.\n         * This dimension is used to help determine how many cells should\n         * be created when initialized, and to help calculate the height of\n         * the scrollable area. This height value can only use `px` units.\n         * Note that the actual rendered size of each cell comes from the\n         * app's CSS, whereas this approximation is used to help calculate\n         * initial dimensions before the item has been rendered.\n         */\n        this.approxItemHeight = 45;\n        /**\n         * The approximate height of each header template's cell.\n         * This dimension is used to help determine how many cells should\n         * be created when initialized, and to help calculate the height of\n         * the scrollable area. This height value can only use `px` units.\n         * Note that the actual rendered size of each cell comes from the\n         * app's CSS, whereas this approximation is used to help calculate\n         * initial dimensions before the item has been rendered.\n         */\n        this.approxHeaderHeight = 30;\n        /**\n         * The approximate width of each footer template's cell.\n         * This dimension is used to help determine how many cells should\n         * be created when initialized, and to help calculate the height of\n         * the scrollable area. This height value can only use `px` units.\n         * Note that the actual rendered size of each cell comes from the\n         * app's CSS, whereas this approximation is used to help calculate\n         * initial dimensions before the item has been rendered.\n         */\n        this.approxFooterHeight = 30;\n        this.onScroll = function () {\n            _this.updateVirtualScroll();\n        };\n    }\n    class_1.prototype.itemsChanged = function () {\n        this.calcCells();\n        this.updateVirtualScroll();\n    };\n    class_1.prototype.connectedCallback = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var contentEl, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        contentEl = this.el.closest('ion-content');\n                        if (!contentEl) {\n                            console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\n                            return [2 /*return*/];\n                        }\n                        _a = this;\n                        return [4 /*yield*/, contentEl.getScrollElement()];\n                    case 1:\n                        _a.scrollEl = _b.sent();\n                        this.contentEl = contentEl;\n                        this.calcCells();\n                        this.updateState();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.componentDidUpdate = function () {\n        this.updateState();\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        this.scrollEl = undefined;\n    };\n    class_1.prototype.onResize = function () {\n        this.calcCells();\n        this.updateVirtualScroll();\n    };\n    /**\n     * Returns the position of the virtual item at the given index.\n     */\n    class_1.prototype.positionForItem = function (index) {\n        return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\n    };\n    /**\n     * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\n     * dirty any time the content or their style changes.\n     *\n     * The subset of items to be updated can are specifing by an offset and a length.\n     */\n    class_1.prototype.checkRange = function (offset, len) {\n        if (len === void 0) { len = -1; }\n        return __awaiter(this, void 0, void 0, function () {\n            var length, cellIndex, cells;\n            return __generator(this, function (_a) {\n                // TODO: kind of hacky how we do in-place updated of the cells\n                // array. this part needs a complete refactor\n                if (!this.items) {\n                    return [2 /*return*/];\n                }\n                length = (len === -1)\n                    ? this.items.length - offset\n                    : len;\n                cellIndex = findCellIndex(this.cells, offset);\n                cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\n                this.cells = inplaceUpdate(this.cells, cells, cellIndex);\n                this.lastItemLen = this.items.length;\n                this.indexDirty = Math.max(offset - 1, 0);\n                this.scheduleUpdate();\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * This method marks the tail the items array as dirty, so they can be re-rendered.\n     *\n     * It's equivalent to calling:\n     *\n     * ```js\n     * virtualScroll.checkRange(lastItemLen);\n     * ```\n     */\n    class_1.prototype.checkEnd = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.items) {\n                    this.checkRange(this.lastItemLen);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    class_1.prototype.updateVirtualScroll = function () {\n        // do nothing if virtual-scroll is disabled\n        if (!this.isEnabled || !this.scrollEl) {\n            return;\n        }\n        // unschedule future updates\n        if (this.timerUpdate) {\n            clearTimeout(this.timerUpdate);\n            this.timerUpdate = undefined;\n        }\n        // schedule DOM operations into the stencil queue\n        readTask(this.readVS.bind(this));\n        writeTask(this.writeVS.bind(this));\n    };\n    class_1.prototype.readVS = function () {\n        var _a = this, contentEl = _a.contentEl, scrollEl = _a.scrollEl, el = _a.el;\n        var topOffset = 0;\n        var node = el;\n        while (node && node !== contentEl) {\n            topOffset += node.offsetTop;\n            node = node.parentElement;\n        }\n        this.viewportOffset = topOffset;\n        if (scrollEl) {\n            this.viewportHeight = scrollEl.offsetHeight;\n            this.currentScrollTop = scrollEl.scrollTop;\n        }\n    };\n    class_1.prototype.writeVS = function () {\n        var dirtyIndex = this.indexDirty;\n        // get visible viewport\n        var scrollTop = this.currentScrollTop - this.viewportOffset;\n        var viewport = getViewport(scrollTop, this.viewportHeight, 100);\n        // compute lazily the height index\n        var heightIndex = this.getHeightIndex();\n        // get array bounds of visible cells base in the viewport\n        var range = getRange(heightIndex, viewport, 2);\n        // fast path, do nothing\n        var shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\n        if (!shouldUpdate) {\n            return;\n        }\n        this.range = range;\n        // in place mutation of the virtual DOM\n        updateVDom(this.virtualDom, heightIndex, this.cells, range);\n        // Write DOM\n        // Different code paths taken depending of the render API used\n        if (this.nodeRender) {\n            doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\n        }\n        else if (this.domRender) {\n            this.domRender(this.virtualDom);\n        }\n        else if (this.renderItem) {\n            this.el.forceUpdate();\n        }\n    };\n    class_1.prototype.updateCellHeight = function (cell, node) {\n        var _this = this;\n        var update = function () {\n            if (node['$ionCell'] === cell) {\n                var style = window.getComputedStyle(node);\n                var height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\n                _this.setCellHeight(cell, height);\n            }\n        };\n        if (node && node.componentOnReady) {\n            node.componentOnReady().then(update);\n        }\n        else {\n            update();\n        }\n    };\n    class_1.prototype.setCellHeight = function (cell, height) {\n        var index = cell.i;\n        // the cell might changed since the height update was scheduled\n        if (cell !== this.cells[index]) {\n            return;\n        }\n        if (cell.height !== height || cell.visible !== true) {\n            cell.visible = true;\n            cell.height = height;\n            this.indexDirty = Math.min(this.indexDirty, index);\n            this.scheduleUpdate();\n        }\n    };\n    class_1.prototype.scheduleUpdate = function () {\n        var _this = this;\n        clearTimeout(this.timerUpdate);\n        this.timerUpdate = setTimeout(function () { return _this.updateVirtualScroll(); }, 100);\n    };\n    class_1.prototype.updateState = function () {\n        var shouldEnable = !!(this.scrollEl &&\n            this.cells);\n        if (shouldEnable !== this.isEnabled) {\n            this.enableScrollEvents(shouldEnable);\n            if (shouldEnable) {\n                this.updateVirtualScroll();\n            }\n        }\n    };\n    class_1.prototype.calcCells = function () {\n        if (!this.items) {\n            return;\n        }\n        this.lastItemLen = this.items.length;\n        this.cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\n        this.indexDirty = 0;\n    };\n    class_1.prototype.getHeightIndex = function () {\n        if (this.indexDirty !== Infinity) {\n            this.calcHeightIndex(this.indexDirty);\n        }\n        return this.heightIndex;\n    };\n    class_1.prototype.calcHeightIndex = function (index) {\n        if (index === void 0) { index = 0; }\n        // TODO: optimize, we don't need to calculate all the cells\n        this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\n        this.totalHeight = calcHeightIndex(this.heightIndex, this.cells, index);\n        this.indexDirty = Infinity;\n    };\n    class_1.prototype.enableScrollEvents = function (shouldListen) {\n        var _this = this;\n        if (this.rmEvent) {\n            this.rmEvent();\n            this.rmEvent = undefined;\n        }\n        var scrollEl = this.scrollEl;\n        if (scrollEl) {\n            this.isEnabled = shouldListen;\n            scrollEl.addEventListener('scroll', this.onScroll);\n            this.rmEvent = function () {\n                scrollEl.removeEventListener('scroll', _this.onScroll);\n            };\n        }\n    };\n    class_1.prototype.renderVirtualNode = function (node) {\n        var _a = node.cell, type = _a.type, value = _a.value, index = _a.index;\n        switch (type) {\n            case CELL_TYPE_ITEM: return this.renderItem(value, index);\n            case CELL_TYPE_HEADER: return this.renderHeader(value, index);\n            case CELL_TYPE_FOOTER: return this.renderFooter(value, index);\n        }\n    };\n    class_1.prototype.render = function () {\n        var _this = this;\n        return (h(Host, { style: {\n                height: this.totalHeight + \"px\"\n            } }, this.renderItem && (h(VirtualProxy, { dom: this.virtualDom }, this.virtualDom.map(function (node) { return _this.renderVirtualNode(node); })))));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"itemHeight\": [\"itemsChanged\"],\n                \"headerHeight\": [\"itemsChanged\"],\n                \"footerHeight\": [\"itemsChanged\"],\n                \"items\": [\"itemsChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute!important;top:0!important;right:0!important;left:0!important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar VirtualProxy = function (_a, children, utils) {\n    var dom = _a.dom;\n    return utils.map(children, function (child, i) {\n        var node = dom[i];\n        var vattrs = child.vattrs || {};\n        var classes = vattrs.class || '';\n        classes += 'virtual-item ';\n        if (!node.visible) {\n            classes += 'virtual-loading';\n        }\n        return Object.assign(Object.assign({}, child), { vattrs: Object.assign(Object.assign({}, vattrs), { class: classes, style: Object.assign(Object.assign({}, vattrs.style), { transform: \"translate3d(0,\" + node.top + \"px,0)\" }) }) });\n    });\n};\nexport { VirtualScroll as ion_virtual_scroll };\n"],"sourceRoot":""}